{"ast":null,"code":"export class Position {\n  constructor(x, y) {\n    this.x = void 0;\n    this.y = void 0;\n    this.x = x;\n    this.y = y;\n  }\n\n  // Allows to clone to a new position for copying all valid moves for board state updates\n  clone() {\n    return new Position(this.x, this.y);\n  }\n\n  // Can compare two pieces or button or anything as positions\n  samePosition(otherPosition) {\n    return this.x === otherPosition.x && this.y === otherPosition.y;\n  }\n}","map":{"version":3,"names":["Position","constructor","x","y","clone","samePosition","otherPosition"],"sources":["/Users/harrisb/Desktop/BetChess/frontend/src/models/Position.ts"],"sourcesContent":["export class Position{\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    // Allows to clone to a new position for copying all valid moves for board state updates\n    clone() : Position {\n        return new Position(this.x, this.y)\n    }\n\n    // Can compare two pieces or button or anything as positions\n    samePosition(otherPosition: Position) : boolean {\n        return this.x === otherPosition.x && this.y === otherPosition.y;\n    }\n\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ;EAIjBC,WAAWA,CAACC,CAAS,EAAEC,CAAS,EAAE;IAAA,KAHlCD,CAAC;IAAA,KACDC,CAAC;IAGG,IAAI,CAACD,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EACd;;EAEA;EACAC,KAAKA,CAAA,EAAc;IACf,OAAO,IAAIJ,QAAQ,CAAC,IAAI,CAACE,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC;EACvC;;EAEA;EACAE,YAAYA,CAACC,aAAuB,EAAY;IAC5C,OAAO,IAAI,CAACJ,CAAC,KAAKI,aAAa,CAACJ,CAAC,IAAI,IAAI,CAACC,CAAC,KAAKG,aAAa,CAACH,CAAC;EACnE;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}